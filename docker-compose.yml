services:
  db:
    image: postgres
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${DATABASE_USER-postgres}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD-postgres}"
    user: postgres
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres'"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
  rails:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "rm -f /tmp/pids/server.pid && ./bin/dev"
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    tmpfs:
      - /tmp/pids/
    depends_on:
      - db
      # - redis
    tty: true
    stdin_open: true
    environment:
      PIDFILE: /tmp/pids/server.pid
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      POSTGRES_USER: "${DATABASE_USER-postgres}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD-postgres}"
      RAILS_ENV: "${RAILS_ENV-development}"

  # redis:
  #   image: redis
  #   command: redis-server
  #   volumes:
  #     - redis:/data
  #   ports:
  #     - 6379
  #   logging:
  #           driver: none

volumes:
  bundle_cache:
  postgres:
  # redis:
