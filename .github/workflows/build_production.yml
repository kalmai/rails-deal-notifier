# https://jetthoughts.com/blog/automate-your-deployments-with-kamal-2-github-actions-devops-development/
name: "Kamal"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_run:
    workflows: ["Ruby on Rails CI"]
    types:
      - completed

env:
  SERVER_ADDR: ${{ secrets.AWS_EC2_HOST }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      DOCKER_BUILDKIT: 1
      RAILS_ENV: production
      BUNDLE_WITHOUT: "development test"
      BUNDLE_WITH: tools

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.4
          bundler-cache: true

      - name: Set up Docker Buildx for cache
        uses: docker/setup-buildx-action@v3
      - name: Expose GitHub Runtime for cache
        uses: crazy-max/ghaction-github-runtime@v3

          # - name: Set up SSH connection
          #   run: |
          #     # Create SSH directory and write the private key
          #     mkdir -p ~/.ssh && echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          #     # Enable current SSH key
          #     eval $(ssh-agent -s) && ssh-add ~/.ssh/id_rsa
          #     # Add the server to known_hosts (use `-p 2222` for custom port if needed)
          #     ssh-keyscan $SERVER_ADDR >> ~/.ssh/known_hosts          
          #   env:
          #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy with Kamal
        run: bundle exec kamal deploy
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
          DOCKER_HUB_USER: ${{ github.actor }}
          AWS_EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
          AWS_EC2_USER: ${{ secrets.AWS_EC2_USER }}
          AWS_RSA_PRIVATE_KEY: ${{ secrets.AWS_RSA_PRIVATE_KEY }}
